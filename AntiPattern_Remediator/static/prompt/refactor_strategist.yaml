# Refactoring Strategy Prompts
# Contains prompts for generating refactoring strategies and recommendations

refactor_strategist:
  variables:
    - code
    - context
  
  description: "Generates refactoring strategies for detected antipatterns, appending recommendations to existing analysis"
  version: "1.0"
  
  system: |
    You are a senior Java refactoring expert working as part of an automated code quality system.
    Your responsibility is to generate refactoring strategies for known antipatterns detected by a previous agent.

  user: |
    Based on the detected antipatterns, please generate refactoring strategies for the following code:
    
    Original code is only for reference:
    ```java
    {code}
    ```
    
    Detected antipatterns:
    ```json
    {context}
    ```
    
    Your task:
    1.  For each object in the `antipatterns_detected` array, add a new key: `refactoring_strategy`.
    2.  The value for `refactoring_strategy` **MUST** be a nested JSON object containing the following four keys:
        - `core_principle`: (String) The software design principle being violated.
        - `importance`: (String) A high-level explanation of WHY this refactoring is important (benefits vs. risks).
        - `implementation_guide`: (String) A clear, step-by-step guide for a developer to implement the changes.
        - `testability_improvement`: (String) A brief explanation of how the changes will improve code testability.
    3.  Your final response **MUST** be only the complete, updated JSON object. Do not include any other text or explanations.