"""
State definitions for the antipattern analysis workflow
"""

from typing import TypedDict, Optional, List, Dict, Any


class AgentState(TypedDict):
    """State definition for passing data through the workflow"""
    code: str                                # Code to be analyzed
    context: Optional[str]                   # Context retrieved from knowledge base (scanner)
    trove_context: Optional[str]             # Context retrieved from the Anti-Pattern Trove (TinyDB/Chroma)
    antipatterns_scanner_results: Optional[str]
    refactoring_strategy_results: Optional[str]  # Refactoring strategy generated by strategist
    refactored_code: Optional[str]  # Code after refactoring
    code_review_results: Optional[str]  # Code review results
    code_review_times: int  # Number of times code has been reviewed
    msgs: List[Dict[str, Any]]   # Message history for conversation context
    answer: Optional[str]        # Analysis result
